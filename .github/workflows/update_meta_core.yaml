name: Update Meta Core

on: 
    schedule:
        - cron: 0 18 3 * *
    workflow_dispatch:

env:
  download_tag: $(curl -sL https://api.github.com/repos/MetaCubeX/mihomo/releases/latest | jq -r '.tag_name')
  download_version: ''
  download_url: https://github.com/MetaCubeX/mihomo/releases/download

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repository
      uses: actions/checkout@main
      
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install jq -y
       
    - name: Init Dependencies
      run: |
        wget https://github.com/upx/upx/releases/download/v3.96/upx-3.96-amd64_linux.tar.xz
        wget https://github.com/upx/upx/releases/download/v3.93/upx-3.93-amd64_linux.tar.xz
        tar xf upx-3.96-amd64_linux.tar.xz
        tar xf upx-3.93-amd64_linux.tar.xz
    - name: Download Core
      run: |
        download_version=${download_tag}
        echo "download_version=${download_version}" >> ${GITHUB_ENV}
        archs=(amd64-compatible armv5 armv7 arm64 mips-softfloat mipsle-hardfloat mipsle-softfloat)
        new_name=(amd64 armv5 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat)
        mkdir tmp
        for((i=0;i<7;i++));do
          wget "${download_url}/${download_tag}/mihomo-linux-${archs[i]}-${download_version}.gz" -O - | gunzip -c > ./tmp/clash-linux-${new_name[i]}
          chmod +x ./tmp/clash-linux-${new_name[i]}
          if [ "${archs[i]}" != "armv5" ];then
            if [[ ${archs[i]} = mips* ]];then
              ./upx-3.93-amd64_linux/upx ./tmp/clash-linux-${new_name[i]}
            else
              ./upx-3.96-amd64_linux/upx ./tmp/clash-linux-${new_name[i]}
            fi
          fi
        done
        rm -fr upx*
    - name: 更新
      run: |
        mkdir -p bin/clash.meta
        rm -fr ./bin/clash.meta/*
        cp ./tmp/* ./bin/clash.meta/
        rm -fr ./tmp
        sed -i "s/meta_v=.*/meta_v=$(./bin/clash.meta/clash-linux-amd64 -v 2>/dev/null | head -n 1 | sed 's/ linux.*//;s/.* //')/" bin/version
    - name: Commit and push
      run: |
        git config --global user.email "mphin@qq.com" && git config --global user.name "Bot"
        git add . && git commit -m "自动更新Meta内核至${download_version}" || exit 0
        git push
    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 2
